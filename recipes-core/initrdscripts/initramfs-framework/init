#!/bin/sh
# Original at poky/meta/recipes-core/initrdscripts/initramfs-framework

add_module_pre_hook() {
	MODULE_PRE_HOOKS="$MODULE_PRE_HOOKS $1"
}

add_module_post_hook() {
	MODULE_POST_HOOKS="$MODULE_POST_HOOKS $1"
}

load_kernel_module() {
	if modprobe $1 >/dev/null 2>&1; then
		info "Loaded module $1"
	else
		debug "Failed to load module $1"
	fi
}

msg() {
	echo "$0[$$] $@" >/dev/console
}

info() {
	[ -n "$bootparam_verbose" ] && echo "$0[$$] INFO: $@" >/dev/console
}

debug() {
	[ -n "$bootparam_debug" ] && echo "$0[$$] DEBUG: $@" >/dev/console
}

fatal() {
    echo $1 >/dev/console
    echo >/dev/console

    if [ -n "$bootparam_init_fatal_sh" ]; then
        sh
    else
        while [ "true" ]; do
            sleep 3600
        done
    fi
}

touch /etc/fstab

mkdir -p /proc /sys /dev
mount -t proc proc /proc
mount -t devtmpfs devtmpfs /dev
mount -t sysfs sysfs /sys
mount -t efivarfs none /sys/firmware/efi/efivars

ROOTFS_DIR=/sysroot
MODULE_PRE_HOOKS=""
MODULE_POST_HOOKS=""
MODULES_DIR=/init.d

. $MODULES_DIR/image_types_partition

LUKS_KEYFILE=""

ip addr add 127.0.0.1/8 dev lo

for p in `cat /proc/cmdline`; do
	if [ -n "$quoted" ]; then
		value="$value $p"
		if [ "`echo $p | sed -e 's/\"$//'`" != "$p" ]; then
			eval "bootparam_${quoted}=${value}"
			unset quoted
		fi
		continue
	fi

	opt=`echo $p | cut -d'=' -f1`
	opt=`echo $opt | sed -e 'y/.-/__/'`
	if [ "`echo $p | cut -d'=' -f1`" = "$p" ]; then
		eval "bootparam_${opt}=true"
	else
		value="`echo $p | cut -d'=' -f2-`"
		if [ "`echo $value | sed -e 's/^\"//'`" != "$value" ]; then
			quoted=${opt}
			continue
		fi
		eval "bootparam_${opt}=\"${value}\""
	fi
done

mkdir -p $ROOTFS_DIR

for m in $MODULES_DIR/*; do

	if [ "`echo $m | sed -e 's/\~$//'`" != "$m" ]; then
		continue
	fi

	module=`basename $m | cut -d'-' -f 2`
	debug "Loading module $module"

	for h in $MODULE_PRE_HOOKS; do
		debug "Calling module hook (pre): $h"
		eval "$h pre $module"
		debug "Finished module hook (pre): $h"
	done

	. $m

	if ! eval "${module}_enabled"; then
		debug "Skipping module $module"
		continue
	fi

	debug "Running ${module}_run"
	eval "${module}_run"

	for h in $MODULE_POST_HOOKS; do
		debug "Calling module hook (post): $h"
		eval "$h post $module"
		debug "Finished module hook (post): $h"
	done
done

fatal "init: failed to initialize the system"
